<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mjj.dao.OrderDao">

    <resultMap type="com.mjj.entity.Order" id="OrderMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="proId" column="pro_id" jdbcType="INTEGER"/>
        <result property="orderId" column="order_id" jdbcType="VARCHAR"/>
        <result property="time" column="time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="OrderMap">
        select
          id, user_id, pro_id, order_id, time
        from e_commerce.order
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="OrderMap">
        select
          id, user_id, pro_id, order_id, time
        from e_commerce.order
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="OrderMap">
        select
        id, user_id, pro_id, order_id, time
        from e_commerce.order
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="proId != null">
                and pro_id = #{proId}
            </if>
            <if test="orderId != null and orderId != ''">
                and order_id = #{orderId}
            </if>
            <if test="time != null">
                and time = #{time}
            </if>
        </where>
    </select>
    <select id="queryByUserId" resultMap="OrderMap">
        select
        id, user_id, pro_id, order_id, time
        from e_commerce.order
        where user_id = #{userId}
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into e_commerce.order(user_id, pro_id, order_id, time)
        values (#{userId}, #{proId}, #{orderId}, #{time})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into e_commerce.order(user_id, pro_id, order_id, time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.proId}, #{entity.orderId}, #{entity.time})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into e_commerce.order(user_id, pro_id, order_id, time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.proId}, #{entity.orderId}, #{entity.time})
        </foreach>
        on duplicate key update
        user_id = values(user_id) , pro_id = values(pro_id) , order_id = values(order_id) , time = values(time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update e_commerce.order
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="proId != null">
                pro_id = #{proId},
            </if>
            <if test="orderId != null and orderId != ''">
                order_id = #{orderId},
            </if>
            <if test="time != null">
                time = #{time},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from e_commerce.order where id = #{id}
    </delete>
    <delete id="deleteByOrderId">
        delete from e_commerce.order where order_id = #{orderId}
    </delete>

</mapper>

