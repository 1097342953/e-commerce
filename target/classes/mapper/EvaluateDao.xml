<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mjj.dao.EvaluateDao">

    <resultMap type="com.mjj.entity.Evaluate" id="EvaluateMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="pId" column="p_id" jdbcType="INTEGER"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="uId" column="u_id" jdbcType="INTEGER"/>
        <result property="time" column="time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="EvaluateMap">
        select
          id, p_id, content, u_id, time
        from e_commerce.evaluate
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="EvaluateMap">
        select
          id, p_id, content, u_id, time
        from e_commerce.evaluate
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="EvaluateMap">
        select
        id, p_id, content, u_id, time
        from e_commerce.evaluate
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="pId != null">
                and p_id = #{pId}
            </if>
            <if test="content != null and content != ''">
                and content = #{content}
            </if>
            <if test="uId != null">
                and u_id = #{uId}
            </if>
            <if test="time != null">
                and time = #{time}
            </if>
        </where>
    </select>
    <select id="queryByProId" resultMap="EvaluateMap">
        select
        id, p_id, content, u_id, time
        from e_commerce.evaluate
        where p_id = #{proId}
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into e_commerce.evaluate(p_id, content, u_id, time)
        values (#{pId}, #{content}, #{uId}, #{time})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into e_commerce.evaluate(p_id, content, u_id, time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.pId}, #{entity.content}, #{entity.uId}, #{entity.time})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into e_commerce.evaluate(p_id, content, u_id, time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.pId}, #{entity.content}, #{entity.uId}, #{entity.time})
        </foreach>
        on duplicate key update
        p_id = values(p_id) , content = values(content) , u_id = values(u_id) , time = values(time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update e_commerce.evaluate
        <set>
            <if test="pId != null">
                p_id = #{pId},
            </if>
            <if test="content != null and content != ''">
                content = #{content},
            </if>
            <if test="uId != null">
                u_id = #{uId},
            </if>
            <if test="time != null">
                time = #{time},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from e_commerce.evaluate where id = #{id}
    </delete>

</mapper>

